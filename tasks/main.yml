---
- name: Gather facts if needed
  ansible.builtin.setup:
  when: ansible_os_family is not defined

- name: Check for Linux
  ansible.builtin.fail:
    msg: This role only supports Linux Operating Systems
  when:
    - ansible_os_family != "RedHat"
    - ansible_os_family != "Debian"

- name: Initial System Block
  block:
  - name: Create Standard Users on initial hosts
    ansible.builtin.user:
      name: '{{ initial_host_users }}'
      create_home: true
      generate_ssh_key: true
      password: '{{ ludus_linux_user_creation.password }}'
      skeleton: /etc/skel
      shell: /bin/bash
    loop: '{{ ludus_linux_user_creation.users }}'
    loop_control:
      loop_var: initial_host_users

  - name: Create Admin Users on initial hosts
    ansible.builtin.user:
      name: '{{ initial_host_admins }}'
      create_home: true
      generate_ssh_key: true
      password: '{{ ludus_linux_user_creation.password }}'
      skeleton: /etc/skel
      shell: /bin/bash
    loop: '{{ ludus_linux_user_creation.admins }}'
    loop_control:
      loop_var: initial_host_admins

  - name: Update Admin Users sudo configuration
    community.general.sudoers:
      name: '{{ initial_host_sudo }}'
      user: '{{ initial_host_sudo }}'
      nopassword: true
      commands: ALL
    loop: '{{ ludus_linux_user_creation.admins }}'
    loop_control:
      loop_var: initial_host_sudo

  - name: Identify System Users
    ansible.builtin.find:
      paths: /home
      recurse: no
      file_type: directory
      excludes: 'debian'
    register: users

  - name: Fetch SSH Public Keys
    ansible.builtin.fetch:
      src: '{{ initial_host_ssh_keys.path }}/.ssh/id_rsa.pub'
      dest: '{{ role_path }}/files/{{ initial_host_ssh_keys.pw_name }}/'
      flat: true
    loop: '{{ users.files }}'
    loop_control:
      loop_var: initial_host_ssh_keys

  when: ludus_linux_user_creation_initial_host | bool

- name: Supplemental System Block
  block:
  - name: Create Standard Users on supplemental hosts
    ansible.builtin.user:
      name: '{{ supplemental_host_users }}'
      create_home: true
      generate_ssh_key: false
      password: '{{ ludus_linux_user_creation.password }}'
      skeleton: /etc/skel
      shell: /bin/bash
    loop: '{{ ludus_linux_user_creation.users }}'
    loop_control:
      loop_var: supplemental_host_users

  - name: Create Admin Users on supplemental hosts
    ansible.builtin.user:
      name: '{{ supplemental_host_admins }}'
      create_home: true
      generate_ssh_key: false
      password: '{{ ludus_linux_user_creation.password }}'
      skeleton: /etc/skel
      shell: /bin/bash
    loop: '{{ ludus_linux_user_creation.admins }}'
    loop_control:
      loop_var: supplemental_host_admins

  - name: Update Admin Users sudo configuration
    community.general.sudoers:
      name: '{{ supplemental_host_sudo }}'
      user: '{{ supplemental_host_sudo }}'
      nopassword: true
      commands: ALL
    loop: '{{ ludus_linux_user_creation.admins }}'
    loop_control:
      loop_var: supplemental_host_sudo

  - name: Identify System Users
    ansible.builtin.find:
      paths: /home
      recurse: no
      file_type: directory
      excludes: 'debian'
    register: users

  - name: Create .ssh folder
    ansible.builtin.file:
      path: '/home/{{ supplemental_host_user_dirs.pw_name }}/.ssh'
      state: directory
      owner: '{{ supplemental_host_user_dirs.pw_name }}'
      group: '{{ supplemental_host_user_dirs.gr_name }}'
      mode: '0700'
    loop: '{{ users.files }}'
    loop_control:
      loop_var: supplemental_host_user_dirs

  - name: Add SSH Public Key to Users Authorized Keys
    ansible.builtin.copy:
      src: '{{ role_path }}/files/{{ supplemental_host_ssh_keys.pw_name }}/id_rsa.pub'
      dest: '/home/{{ supplemental_host_ssh_keys.pw_name}}/.ssh/authorized_keys'
      owner: '{{ supplemental_host_ssh_keys.pw_name }}'
      group: '{{ supplemental_host_ssh_keys.gr_name }}'
      mode: '0600'
    loop: '{{ users.files }}'
    loop_control:
      loop_var: supplemental_host_ssh_keys

  when: not ludus_linux_user_creation_initial_host | bool

- name: Success
  ansible.builtin.debug:
    msg: 'Linux User Creation Has Completed.'
